// Copyright (c) 2025 NTT InfraNet
// @flow
export const TILESET_FILE_NAME = 'tileset.json'

export const MODAL_TYPE = {
  FILE_LIST: 'FILE_LIST',
  FILE_INPUT: 'FILE_INPUT',
  FILE_REGISTER: 'FILE_REGISTER',
  FILE_MULTI_REGISTER: 'FILE_MULTI_REGISTER'
}

export const EXTENSION = {
  LAS: 'las'
}

export const ALLOWED_EXTENSION_LIST = [EXTENSION.LAS]

export const CATEGORY = {
  DESIGN_FILE: 'designFile',
  TOPOGRAPHY: 'topography'
}

export const UNKNOWN_ZIP = 'UNKNOWN_ZIP'
export const FILE_TYPE_TO_CATEGORY_MAP: Map<string, Array<string>> = new Map([
  [EXTENSION.LAS, [CATEGORY.TOPOGRAPHY]],
  [UNKNOWN_ZIP, [CATEGORY.DESIGN_FILE, CATEGORY.TOPOGRAPHY]]
])

export const FORMAT_TYPE = {
  LASER: 'laser',
  CITYGML: 'citygml'
}

export const FORMAT_TYPE_NAME = {
  LASER: 'LASer',
  CITYGML: 'CityGML'
}

export const FORMAT_TYPE_MAP: Map<string, Map<string, Array<string>>> = new Map(
  [
    ['', new Map()],
    [
      CATEGORY.TOPOGRAPHY,
      new Map<string, Array<string>>([[EXTENSION.LAS, [FORMAT_TYPE.LASER]]])
    ]
  ]
)

export const FILE_UPLOAD_PROGRESS_EVENT_NAME = 'fileUploadProgress'

export const BEFORE_TILE_PREFIX = 'BEFORE_TILE'

export const FILE_UPLOAD_STATUS = {
  CANCELLED: `${BEFORE_TILE_PREFIX}_UPLOAD_CANCELLED`,
  WAITING: `${BEFORE_TILE_PREFIX}_UPLOAD_WAITING`,
  UPLOADING: `${BEFORE_TILE_PREFIX}_UPLOADING`,
  DONE: `${BEFORE_TILE_PREFIX}_UPLOAD_DONE`
}

export const FILE_TILE_STATUS = {
  CONVERT_PREPARATION: 'CONVERT_PREPARATION',
  OC_CONVERT_UPLOADING: 'OC_CONVERT_UPLOADING',
  OC_CONVERTING: 'OC_CONVERTING',
  OC_TRANSFERRING: 'OC_TRANSFERRING',
  OC_TRANSFERRED: 'OC_TRANSFERRED',
  UPLOAD_PREPARATION: 'UPLOAD_PREPARATION',
  UPLOAD_S3_UP: 'UPLOAD_S3_UP',
  PRE_CONVERT_WAIT: 'PRE_CONVERT_WAIT',
  PRE_CONVERT_UPLOADING: 'PRE_CONVERT_UPLOADING',
  PRE_CONVERTING: 'PRE_CONVERTING',
  UPLOAD_WAIT: 'UPLOAD_WAIT',
  UPLOADING: 'UPLOADING',
  UPLOADING_S3_DL: 'UPLOADING_S3_DL',
  UPLOADING_ION_UP: 'UPLOADING_ION_UP',
  DELETE_WAIT_ERROR: 'DELETE_WAIT_ERROR',
  S3_UPLOAD_WAIT: 'S3_UPLOAD_WAIT',
  S3_VIRUS_SCAN_IN_PROGRESS: 'S3_VIRUS_SCAN_IN_PROGRESS',
  S3_VIRUS_SCAN_UPLOAD_ERROR: 'S3_VIRUS_SCAN_UPLOAD_ERROR',
  S3_VIRUS_SCAN_RESULT_NG: 'S3_VIRUS_SCAN_RESULT_NG',
  S3_UPLOAD_COMPLETE: 'S3_UPLOAD_COMPLETE',
  S3_UPLOAD_ERROR: 'S3_UPLOAD_ERROR',
  S3_UPLOAD_COMPLETE_TO_CONVERT_TOOL: 'S3_UPLOAD_COMPLETE_TO_CONVERT_TOOL',
  S3_UPLOAD_ERROR_TO_CONVERT_TOOL: 'S3_UPLOAD_ERROR_TO_CONVERT_TOOL',
  S3_COPY_COMPLETE_FROM_CONVERT_TOOL: 'S3_COPY_COMPLETE_FROM_CONVERT_TOOL',
  S3_COPY_ERROR_FROM_CONVERT_TOOL: 'S3_COPY_ERROR_FROM_CONVERT_TOOL',
  S3_COPY_WAIT_FROM_EXTERNAL: 'S3_COPY_WAIT_FROM_EXTERNAL',
  S3_COPY_COMPLETE_FROM_EXTERNAL: 'S3_COPY_COMPLETE_FROM_EXTERNAL',
  S3_COPY_ERROR_FROM_EXTERNAL: 'S3_COPY_ERROR_FROM_EXTERNAL',
  CONVERTING: 'CONVERTING',
  CONVERTED: 'CONVERTED',
  CONVERT_ERROR: 'CONVERT_ERROR',
  CONVERT_TOOL_ERROR: 'CONVERT_TOOL_ERROR',
  EXTENAL_UPDATE: 'EXTENAL_UPDATE',
  DELETE_WAIT: 'DELETE_WAIT',
  DELETE_COMPLETE: 'DELETE_COMPLETE',
  DELETE_ERROR: 'DELETE_ERROR'
}

export const CANCEL_UPLOAD_MESSAGE = 'File upload is canceled'

export const FILE_TYPE = {
  ASSET: 'asset'
}

// 3DVアイテムタイプ
// 3DVファイルアップロード／LAS：ehvTile
// 3DVファイルアップロード／空間ID：ehvSpaceInfo
// 外部連携／CityGML：externalTileAf
// 外部連携／空間ID／承認前：externalSpaceInfoBe
// 外部連携／空間ID／承認後：externalSpaceInfoAf
export const EHV_ASSET_TYPE = {
  EHV_TILE: 'ehvTile',
  EHV_SPACE_INFO: 'ehvSpaceInfo',
  EXTERNAL_TILE_AF: 'externalTileAf',
  EXTERNAL_SPACE_INFO_BE: 'externalSpaceInfoBe',
  EXTERNAL_SPACE_INFO_AF: 'externalSpaceInfoAf'
}

export const FORMAT_TYPE_EXTENSION_MAP: Map<string, Array<string>> = new Map([
  [FORMAT_TYPE_NAME.LASER, [EXTENSION.LAS]]
])

export const MAX_UPLOAD_FILE_NAME_LENGTH = 100

export const BASE_TERRAIN_CWT_ID = process.env.REACT_APP_BASE_TERRAIN_CWT_ID
export const BASE_TERRAIN_GIS_ID = process.env.REACT_APP_BASE_TERRAIN_GIS_ID
export const BASE_TERRAIN_DEFAULT_ION_ASSET_ID =
  BASE_TERRAIN_GIS_ID || BASE_TERRAIN_CWT_ID || null
